一、内置的filter
1、currency
页面中使用
{{ num | currency : symbol : fractionSize}}
js中使用
$filter('currency')(amount, symbol, fractionSize)
解释
{{数字 | currency：货币符号或标识符：小数点后保留几位}}
例子
{{12.221 | currency:$:2}}
{{12.221 | currency:"USD$":2}} 第二个参数可为字符串
2、date
页面中使用
{{ date_expression | date : format : timezone}}
js中使用
$filter('date')(date, format, timezone)
解释
{{1288323623006 | date:格式:时区}}
例子
{{1288323623006 | date:'medium'}}: Oct 29, 2010 11:40:23 AM  预定义的格式
{{1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'}}: 2010-10-29 11:40:23 +0800  Z的作用
{{1288323623006 | date:'MM/dd/yyyy @ h:mma'}}: 10/29/2010 @ 11:40AM  日期与时间间添加连接符
{{1288323623006 | date:"MM/dd/yyyy 'at' h:mma"}}: 10/29/2010 at 11:40AM  
最后的a添加AM，PM，一个h当小时小于10时显示一个数字；hh，当小时小于10时补0
3、json
页面中使用
{{ json_expression | json : spacing}}
js中使用
$filter('json')(object, spacing) 
第二个参数为缩进空间，默认为2
例子
{{ {'name':'value'} | json:4 }}
4、limitTo
页面中使用
{{ limitTo_expression | limitTo : limit : begin}}
js中使用
$filter('limitTo')(input, limit, begin)
{{ 数据，可为字符串或数组 | limitTo : 数量 : 开始位置}}
5、lowercase
页面中使用
{{ lowercase_expression | lowercase}}
js中使用
$filter('lowercase')()
6、uppercase
页面中使用
{{ lowercase_expression | uppercase}}
js中使用
$filter('uppercase')()
7、number
页面中使用
{{ number_expression | number : fractionSize}}
js中使用
$filter('number')(number, fractionSize)
解释
{{ num | number : 保留小数位数，默认为3}}
8、orderBy
页面中使用
{{ orderBy_expression | orderBy : expression : reverse : comparator}}
js中使用
$filter('orderBy')(collection, expression, reverse, comparator)
解释
{{ 数据 | orderBy : 表达式 : 倒序 : 处理函数}}
{{ 数据 | orderBy : $index : true : 处理函数}} 此时为倒序
