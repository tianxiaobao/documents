1 html5与html4的区别
canvas代替了flash，新增header和footer，menu，figure，section，nav，article，audio，video标签
删除b，font，frame，center，big标签
新增本地存储localstorage

2 arraylist与array的区别。
一、Array的用法与数组几乎一样，可以看做是数组。在定义的时候需要指定长度；ArrayList的用法与普通集合一样，定义的时候不需要指定长度；
如：Array[] animalArray = new Array[2];
   ArrayList animalArrayList = new ArrayList();
   
3 String，StringBuffer，StringBuilder

　　1.三者在执行速度方面的比较：StringBuilder >  StringBuffer  >  String

　　2.String <（StringBuffer，StringBuilder）的原因
String：字符串常量，StringBuffer：字符创变量，StringBuilder：字符创变量
String是“字符创常量”，也就是不可改变的对象。
1 String s = "abcd";
2 s = s+1;
3 System.out.print(s);// result : abcd1
 JVM是这样解析这段代码的：首先创建对象s，赋予一个abcd，然后再创建一个新的对象s用来，执行第二行代码，也就是说我们之前对象s并没有变化，
 所以我们说String类型是不可改变的对象了，由于这种机制，每当用String操作字符串时，实际上是在不断的创建新的对象，而原来的对象就会变为垃圾被ＧＣ回收掉，
 可想而知这样执行效率会有多底。
而StringBuffer与StringBuilder就不一样了，他们是字符串变量，是可改变的对象，每当我们用它们对字符串做操作时，实际上是在一个对象上操作的，
这样就不会像String一样创建一些而外的对象进行操作了，当然速度就快了。
　　4.StringBuilder与 StringBuffer
StringBuilder：线程非安全的
StringBuffer：线程安全的
当我们在字符串缓冲去被多个线程使用是，JVM不能保证StringBuilder的操作是安全的，虽然他的速度最快，但是可以保证StringBuffer是可以正确操作的。
    当然大多数情况下就是我们是在单线程下进行的操作，所以大多数情况下是建议用StringBuilder而不用StringBuffer的，就是速度的原因。
对于三者使用的总结： 1.如果要操作少量的数据用 = String
2.单线程操作字符串缓冲区 下操作大量数据 = StringBuilder
3.多线程操作字符串缓冲区 下操作大量数据 = StringBuffe

hashmap 线程不安全 允许有null的键和值 效率高一点、方法不是Synchronize的要提供外同步  有containsvalue和containsKey方法 ，
HashMap 是Java1.2 引进的Map interface 的一个实现，HashMap是Hashtable的轻量级实现
hashtable 线程安全 不允许有null的键和值 效率稍低、 方法是是Synchronize的 ，有contains方法方法
hashtable、Hashtable 继承于Dictionary 类 Hashtable 比HashMap 要旧

ajax与jsonp区别
实现方法完全不一样。ajax的核心是通过XmlHttpRequest获取非本页内容，而jsonp的核心则是动态添加<script>标签来调用服务器提供的js脚本。

jsonp跨域通过z加载静态文件
/*
 * Created by jonnyf on 15-9-15.
 * 这个函数是通过JSONP的方式请求后端接口
 * 需要传入三个参数，
 * url为请求的接口地址，类型为字符串
 * parameter为请求的参数对象，类型为对象
 * callback为完成请求后的回调函数名称， 类型为字符串
 */

function getJSONP(url, parameter, callback) {
    var Script = document.createElement('script'),
        _parameter = parameter,
        _url = url,
        _callback = callback,
        code = '';
    for (var i in _parameter) {
        code += i + '=' + _parameter[i] + '&'
    }
    Script.src = _url + '?' + code + 'callback=' + _callback;
    document.body.appendChild(Script);
    Script.onload = function(){   //  请求成功后移除标签
            Script.remove();
        }
    Script.onerror = function() {   //  失败的时候也要移除标签
         alert('请求错误, 请重试');
        Script.remove();
    };
}



一、Trident内核代表产品Internet Explorer，又称其为IE内核。Trident（又称为MSHTML），是微软开发的一种排版引擎。使用Trident渲染引擎的浏览器包括：
IE、傲游、世界之窗浏览器、Avant、腾讯TT、Netscape 8、NetCaptor、Sleipnir、GOSURF、GreenBrowser和KKman等。
2
二、Gecko内核代表作品Mozilla FirefoxGecko是一套开放源代码的、以C++编写的网页排版引擎。Gecko是最流行的排版引擎之一，仅次于Trident。
使用它的最著名浏览器有Firefox、Netscape6至9。
3
三、WebKit内核代表作品Safari、Chromewebkit 是一个开源项目，包含了来自KDE项目和苹果公司的一些组件，主要用于Mac OS系统，它的特点在于源码结构清晰、
渲染速度极快。缺点是对网页代码的兼容性不高，导致一些编写不标准的网页无法正常显示。主要代表作品有Safari和Google的浏览器Chrome。
4
四、Presto内核代表作品OperaPresto是由Opera Software开发的浏览器排版引擎，供Opera 7.0及以上使用。它取代了旧版Opera 4至6版本使用的Elektra排版引擎，
包括加入动态功能，例如网页或其部分可随着DOM及Script语法的事件而重新排版。


方法和函数的区别？
一个东西，用对象调用的叫方法，直接调函数名的叫函数

谈谈JSONP的工作原理
答JSONP是一种非正式传输协议，该协议的一个要点就是允许用户传递一个callback参数给服务端，然后服务端返回数据时会将这个callback参数作为函数名来包裹住JSON数据，
这样客户端就可以随意定制自己的函数来自动处理返回数据了

JavaScript中alert(1&&2)为2的原因
1、只要“||”前面为false,不管“||”后面是true还是false，都返回“||”后面的值。
2、只要“||”前面为true,不管“||”后面是true还是false，都返回“||”前面的值。
1、只要“&&”前面是false，无论“&&”后面是true还是false，结果都将返“&&”前面的值;
2、只要“&&”前面是true，无论“&&”后面是true还是false，结果都将返“&&”后面的值;

div水平垂直居中
.center {
  position: fixed;
  top: 50%;
  left: 50%;
  background-color: #000;
  color: #f00;
-webkit-transform: translateX(-50%) translateY(-50%);
-moz-transform: translateX(-50%) translateY(-50%);
-ms-transform: translateX(-50%) translateY(-50%);
transform: translateX(-50%) translateY(-50%);
}

css3不定宽高水平垂直居中
只要三句话就可以实现不定宽高水平垂直居中。
justify-content:center;//子元素水平居中
align-items:center;//子元素垂直居中
display:-webkit-flex;
在父级元素上面加上上面3句话，就可以实现子元素水平垂直居中。

var i = 4;
var t = setInterval(function(){
	if (i == 0) {
		clearInterval(t);
		return;
	}
	document.getElementById("test").innerHTML = i;
	i--;
}, 1000)
